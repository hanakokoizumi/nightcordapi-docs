import{_ as e,o,c as d,a as c}from"./app.2cc09e9d.js";const r={},a=c('<h1 id="nightcord-api-文档" tabindex="-1"><a class="header-anchor" href="#nightcord-api-文档" aria-hidden="true">#</a> Nightcord API 文档</h1><blockquote><p>本文档将引导您使用 Nightcord API。</p></blockquote><p>API 域名：<code>api.nightcord.de</code></p><blockquote><p>以下所有 <code>[server]</code> 的取值均为 <code>jp</code> <code>en</code> <code>kr</code> <code>tw</code> 之一，否则返回 403。所有请求均需要 App ID 和 App Secret。</p></blockquote><h2 id="查询个人-profile" tabindex="-1"><a class="header-anchor" href="#查询个人-profile" aria-hidden="true">#</a> 查询个人 Profile</h2><p><code>GET /profile/[server]/[userid]/</code></p><blockquote><p><code>[userid]</code>: 用户 ID</p></blockquote><p>例如：<code>GET /profile/jp/269789579175202819/</code></p><p>此接口返回大量数据，包括个人信息、等级、自定义名片、打歌信息等。如果找不到用户，则返回 404。</p><h2 id="查询活动参与信息" tabindex="-1"><a class="header-anchor" href="#查询活动参与信息" aria-hidden="true">#</a> 查询活动参与信息</h2><h3 id="根据用户-id" tabindex="-1"><a class="header-anchor" href="#根据用户-id" aria-hidden="true">#</a> 根据用户 ID</h3><p><code>GET /event/[event]/user/[server]/[userid]/</code></p><blockquote><p><code>[event]</code>: 活动 ID</p><p><code>[userid]</code>: 用户 ID</p></blockquote><p>例如：<code>GET /event/77/user/jp/269789579175202819/</code></p><p>此接口返回用户的排名、成绩、简单的 Profile 等。如果找不到用户，则返回 404。</p><h3 id="根据排名" tabindex="-1"><a class="header-anchor" href="#根据排名" aria-hidden="true">#</a> 根据排名</h3><p><code>GET /event/[event]/rank/[server]/[rank]/</code></p><blockquote><p><code>[event]</code>: 活动 ID</p><p><code>[rank]</code>: 要查询的排名</p></blockquote><p>例如：<code>GET /event/77/rank/jp/1/</code></p><p>此接口返回用户的排名、成绩、简单的 Profile 等。如果找不到用户，则返回 404。</p><h3 id="根据排名批量查询" tabindex="-1"><a class="header-anchor" href="#根据排名批量查询" aria-hidden="true">#</a> 根据排名批量查询</h3><p><code>GET /event/[event]/rank/[server]/[rank]/batch/[size]/</code></p><blockquote><p><code>[event]</code>: 活动 ID</p><p><code>[rank]</code>: 要查询的排名</p><p><code>[size]</code>: 批量查询的数目，最多 100 名</p></blockquote><p>例如：<code>GET /event/77/rank/jp/1/batch/100/</code></p><p>此接口返回从指定排名开始<code>[batch]</code>名用户的排名、成绩、简单的 Profile 等。如果<code>[size]</code>异常，返回 400；如果找不到用户，则返回 404。</p><h2 id="查询排位赛参与信息" tabindex="-1"><a class="header-anchor" href="#查询排位赛参与信息" aria-hidden="true">#</a> 查询排位赛参与信息</h2><h3 id="根据用户-id-1" tabindex="-1"><a class="header-anchor" href="#根据用户-id-1" aria-hidden="true">#</a> 根据用户 ID</h3><p><code>GET /match/[event]/user/[server]/[userid]/</code></p><blockquote><p><code>[event]</code>: 活动 ID</p><p><code>[userid]</code>: 用户 ID</p></blockquote><p>例如：<code>GET /match/77/user/jp/269789579175202819/</code></p><p>此接口返回用户的排名、成绩、简单的 Profile 等。如果找不到用户，则返回 404。</p><h3 id="根据排名-1" tabindex="-1"><a class="header-anchor" href="#根据排名-1" aria-hidden="true">#</a> 根据排名</h3><p><code>GET /match/[event]/rank/[server]/[rank]/</code></p><blockquote><p><code>[event]</code>: 活动 ID</p><p><code>[rank]</code>: 要查询的排名</p></blockquote><p>例如：<code>GET /match/77/rank/jp/1/</code></p><p>此接口返回用户的排名、成绩、简单的 Profile 等。如果找不到用户，则返回 404。</p>',36),p=[a];function t(i,n){return o(),d("div",null,p)}const s=e(r,[["render",t],["__file","index.html.vue"]]);export{s as default};
